{"ast":null,"code":"var _jsxFileName = \"D:\\\\emp_mngmnt\\\\employee-mgmnt-4\\\\employee-mgmnt\\\\payrollUI-4\\\\payrollUI\\\\src\\\\components\\\\ProtectedRoute.js\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { getUserRole, getToken } from '../services/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProtectedRoute({\n  children,\n  roleRequired\n}) {\n  const token = getToken();\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n  const role = getUserRole();\n  // role could be string or array\n  const normalized = Array.isArray(role) ? role[0] : role;\n  if (roleRequired && !new RegExp(roleRequired, 'i').test(normalized || '')) {\n    // unauthorized\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n}\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","getUserRole","getToken","jsxDEV","_jsxDEV","ProtectedRoute","children","roleRequired","token","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","role","normalized","Array","isArray","RegExp","test","_c","$RefreshReg$"],"sources":["D:/emp_mngmnt/employee-mgmnt-4/employee-mgmnt/payrollUI-4/payrollUI/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { getUserRole, getToken } from '../services/auth';\r\n\r\nfunction ProtectedRoute({ children, roleRequired }) {\r\n  const token = getToken();\r\n  if (!token) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n  const role = getUserRole();\r\n  // role could be string or array\r\n  const normalized = Array.isArray(role) ? role[0] : role;\r\n  if (roleRequired && !new RegExp(roleRequired, 'i').test(normalized || '')) {\r\n    // unauthorized\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n  return children;\r\n}\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,cAAcA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,EAAE;EAClD,MAAMC,KAAK,GAAGN,QAAQ,CAAC,CAAC;EACxB,IAAI,CAACM,KAAK,EAAE;IACV,oBAAOJ,OAAA,CAACJ,QAAQ;MAACS,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;EACA,MAAMC,IAAI,GAAGd,WAAW,CAAC,CAAC;EAC1B;EACA,MAAMe,UAAU,GAAGC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI;EACvD,IAAIR,YAAY,IAAI,CAAC,IAAIY,MAAM,CAACZ,YAAY,EAAE,GAAG,CAAC,CAACa,IAAI,CAACJ,UAAU,IAAI,EAAE,CAAC,EAAE;IACzE;IACA,oBAAOZ,OAAA,CAACJ,QAAQ;MAACS,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;EACA,OAAOR,QAAQ;AACjB;AAACe,EAAA,GAbQhB,cAAc;AAevB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}